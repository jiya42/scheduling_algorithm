#include <stdio.h>
struct process{
int id,at,bt,ct,tat,wt,status;
};
void main(){
struct process p[100];
float avg_tat,avg_wt,tot_tat=0,tot_wt=0;
int i,completed=0,min_bt,index,current_time=0,n;
printf("enter the number of processes");
scanf("%d",&n);
printf("\nenter the details of process");
for (i=0;i<n;i++){
printf("\nenter pid,at,bt");
scanf("%d%d%d",&p[i].id,&p[i].at,&p[i].bt);
p[i].status=0;
}while (completed!=n){
min_bt=32567;
index=-1;
for (i=0;i<n;i++){
if ((p[i].at<=current_time) && (p[i].status==0)){
if (p[i].bt<min_bt){
min_bt=p[i].bt;
index=i;

}}
}if (index==-1)
current_time++;
else{
current_time=current_time+p[index].bt;
p[index].ct=current_time;
p[index].status=1;
completed++;
}}for (i=0;i<n;i++){
p[i].tat=p[i].ct-p[i].at;
tot_tat=tot_tat+p[i].tat;
p[i].wt=p[i].tat-p[i].bt;
tot_wt=tot_wt+p[i].wt;
}avg_tat=tot_tat/n;
avg_wt=tot_wt/n;
printf("pid \t at \t bt \t ct \t tat \t wt\n");
for (i=0;i<n;i++){
printf("%d \t%d \t%d \t %d \t %d \t %d\n",p[i].id,p[i].at,p[i].bt,p[i].ct,p[i].tat,p[i].wt);
}printf("avg tat%f\navg wt%f",avg_tat,avg_wt);
}
